# This is a basic workflow to help you get started with Actions

name: Generate Index AND Build and Deploy Blog

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
    paths:
      - "blog/*.md"
      - "templates/**"
      - "build.py"
      - "generate_index.py"
      - ".github/workflows/build-deploy.yml"
  pull_request:
    branches: [ "master" ]
    paths:
      - "blog/*.md"
      - "templates/**"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'incremental'
        type: choice
        options:
        - incremental
        - full

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # First job: Generate index and detect changes
  generate-index:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.check-changes.outputs.has-changes }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Installing UV (Caching Enabled)
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          version: "latest"

      - name: Set up Python
        run: uv python install

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Generate Index
        run: uv run generate_index.py
      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet index.json; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "📝 No changes detected in blog posts"
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "🔄 Changes detected in blog posts"
            git diff --name-only
          fi

      - name: Commit updated index
        if: steps.check-changes.outputs.has-changes == 'true'
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add index.json
          git commit -m "🤖 Auto-update blog index [skip ci]" || echo "No changes to commit"
          git push


  # Second job: Build and deploy (only if there are changes)
  build-deploy:
    runs-on: ubuntu-latest
    needs: generate-index
    if: needs.generate-index.outputs.has-changes == 'true' || github.event.inputs.build_type == 'full'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}  # Get the latest commit with updated index

    - name: Pull latest changes
      run: git pull origin ${{ github.ref_name }}

    - name: Setup UV
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        version: "latest"

    - name: Setup Python  
      run: uv python install
    
    - name: Install Project
      run: uv sync --locked --all-extras --dev

    - name: Cache build assets
      uses: actions/cache@v4
      with:
        path: |
          dist/static
          .build-cache
        key: blog-assets-${{ hashFiles('static/**', 'templates/**') }}
        restore-keys: |
          blog-assets-

    - name: Build site
      run: |
        if [ "${{ github.event.inputs.build_type }}" = "full" ]; then
          echo "🔄 Running full build..."
          uv run build.py full
        else
          echo "⚡ Running incremental build..."
          uv run build.py
        fi

        # Add build timestamp
        echo "Built on $(date)" > dist/build-info.txt

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Build summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type**: ${{ github.event.inputs.build_type || 'incremental' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Site URL**: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

        if [ -f dist/build-info.txt ]; then
          echo "- **Files Built**: $(find dist -name '*.html' | wc -l) pages" >> $GITHUB_STEP_SUMMARY
        fi

  # Optional: Cleanup old builds (runs monthly)
  cleanup:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - name: Cleanup old artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const artifacts = await github.rest.actions.listArtifactsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });

          const oldArtifacts = artifacts.data.artifacts
            .filter(artifact => {
              const age = Date.now() - new Date(artifact.created_at).getTime();
              return age > 30 * 24 * 60 * 60 * 1000; // 30 days
            });

          for (const artifact of oldArtifacts) {
            await github.rest.actions.deleteArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: artifact.id,
            });
          }