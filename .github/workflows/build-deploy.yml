name: Generate Index AND Build and Deploy Blog

on:
  push:
    branches: [ "master" ]
    paths:
      - "blog/*.md"
      - "templates/**"
      - "build.py"
      - "generate_index.py"
      - ".github/workflows/build-deploy.yml"
  pull_request:
    branches: [ "master" ]
    paths:
      - "blog/*.md"
      - "templates/**"
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'incremental'
        type: choice
        options:
          - incremental
          - full

env:
  PYTHON_VERSION: '3.11'

jobs:
  generate-index:
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.check-changes.outputs.has-changes }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Installing UV (Caching Enabled)
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          version: "latest"

      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev

      - name: Generate Index
        run: uv run generate_index.py

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet index.json; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "📝 No changes detected in blog posts"
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "🔄 Changes detected in blog posts"
            git diff --name-only
          fi

      - name: Commit updated index
        if: steps.check-changes.outputs.has-changes == 'true'
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add index.json
          git commit -m "🤖 Auto-update blog index [skip ci]" || echo "No changes to commit"
          git push

      - name: debug-List directory contents
        run: ls -lh

  build-deploy:
    runs-on: ubuntu-latest
    needs: generate-index
    if: needs.generate-index.outputs.has-changes == 'true' || github.event.inputs.build_type == 'full'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Ensure fresh git state
        run: |
          git fetch --all
          git reset --hard origin/${{ github.ref_name }}
          git status

      - name: Confirm index.json exists before build
        run: ls -lh index.json || (echo "index.json MISSING!"; exit 1)

      - name: Setup UV
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          version: "latest"

      - name: Setup Python  
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: uv sync --locked --all-extras --dev
        
      - name: Cache build assets
        uses: actions/cache@v4
        with:
          path: |
            dist/static
            .build-cache
          key: blog-assets-${{ hashFiles('static/**', 'templates/**') }}
          restore-keys: |
            blog-assets-

      - name: Build site
        run: |
          if [ "${{ github.event.inputs.build_type }}" = "full" ]; then
            echo "🔄 Running full build..."
            uv run build.py full
          else
            echo "⚡ Running incremental build..."
            uv run build.py
          fi

          # Add build timestamp
          echo "Built on $(date)" > dist/build-info.txt

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Build summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Type**: ${{ github.event.inputs.build_type || 'incremental' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Site URL**: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

          if [ -f dist/build-info.txt ]; then
            echo "- **Files Built**: $(find dist -name '*.html' | wc -l) pages" >> $GITHUB_STEP_SUMMARY
          fi

  cleanup:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Cleanup old artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const oldArtifacts = artifacts.data.artifacts
              .filter(artifact => {
                const age = Date.now() - new Date(artifact.created_at).getTime();
                return age > 30 * 24 * 60 * 60 * 1000; // 30 days
              });

            for (const artifact of oldArtifacts) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
            }
